{"version":3,"file":"anyGrid.cjs.js","sources":["../src/anyGrid.js"],"sourcesContent":["class AnyGrid {\n  constructor(data, columns, initialItemsPerPage) {\n    this.data = data;\n    this.columns = columns;\n    this.itemsPerPage = initialItemsPerPage;\n    this.currentPage = 1;\n    this.tbody = null;\n    this.searchInput = null;\n    this.paginationContainer = null;\n    this.filteredData = this.data;\n    this.sortingOrder = {};\n\n    // Initialize the data grid\n    this.initializeDataGrid();\n\n    // Set up search input\n    this.searchInput = document.getElementById('searchInput');\n    this.searchInput.addEventListener('input', this.searchTable.bind(this));\n  }\n\n  // Initialize the data grid layout and event listeners\n  initializeDataGrid() {\n    const dataGrid = document.querySelector('#anyGrid');\n    if (dataGrid) {\n      const htmlContent = `\n        <input type=\"text\" id=\"searchInput\" placeholder=\"Search...\">\n        <select id=\"itemsPerPage\">\n          <option value=\"5\">5</option>\n          <option value=\"10\" selected>10</option>\n          <option value=\"20\">20</option>\n          <option value=\"50\">50</option>\n          <option value=\"100\">100</option>\n        </select>\n        \n        <table id=\"dataTable\">\n          <thead>\n            <tr></tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n        <div id=\"pagination\"></div>\n      `;\n      \n      dataGrid.insertAdjacentHTML('afterbegin', htmlContent);\n\n      // Add event listeners programmatically\n      const searchInput = document.querySelector('#searchInput');\n      searchInput.addEventListener('input', this.searchTable.bind(this));\n      const itemsPerPageSelect = document.querySelector('#itemsPerPage');\n      itemsPerPageSelect.addEventListener('change', (event) => this.updateItemsPerPage(event.target.value));\n    }\n\n    this.tbody = document.querySelector('#dataTable tbody');\n    this.itemsPerPage = document.querySelector('#itemsPerPage');\n    this.paginationContainer = document.querySelector('#pagination');\n\n    this.renderData(this.data);\n    this.updatePagination();\n  }\n\n  // Render the data in the table\n  renderData() {\n    this.tbody.innerHTML = '';\n    const headerRow = document.querySelector('#dataTable thead tr');\n    headerRow.innerHTML = '';\n\n    // Create table headers\n    this.columns.forEach((column, index) => {\n      if (!column.hidden) {\n        const headerCell = document.createElement('th');\n        headerCell.textContent = column.label || column.header;\n        if (column.joinedColumns) {\n          headerCell.setAttribute('colspan', column.joinedColumns.length); // Set colspan for joined columns\n        } else {\n          headerCell.dataset.index = index;\n          headerCell.addEventListener('click', () => this.sortTable(index));\n        }\n        headerRow.appendChild(headerCell);\n      }\n    });\n\n    // Render action headers for the last column\n    const actionColumn = this.columns[this.columns.length - 1];\n    actionColumn.actions.forEach((action) => {\n      const headerCell = document.createElement('th');\n      headerCell.textContent = action.label;\n      headerRow.appendChild(headerCell);\n    });\n\n    // Render rows of data\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage.value;\n    const endIndex = Math.min(this.currentPage * this.itemsPerPage.value, this.data.length);\n    this.filteredData.slice(startIndex, endIndex).forEach((item) => {\n      const row = document.createElement('tr');\n\n      this.columns.forEach((column) => {\n        if (!column.hidden) {\n          const cell = document.createElement('td');\n          if (column.joinedColumns) {\n            // Concatenate values from joined columns\n            const joinedValue = column.joinedColumns.map(col => item[col]).join(' ');\n            cell.textContent = joinedValue;\n            cell.setAttribute('colspan', column.joinedColumns.length);\n          } else {\n            cell.textContent = item[column.name];\n          }\n          row.appendChild(cell);\n        }\n      });\n\n      // Render actions for the last column\n      actionColumn.actions.forEach((action) => {\n        const actionCell = document.createElement('td');\n        const actionLink = document.createElement('a');\n        actionLink.textContent = action.label;\n        actionLink.href = action.url.replace('{id}', item.id);\n\n        // Add class and id if they exist in the action object\n        if (action.class) {\n          actionLink.classList.add(action.class);\n        }\n        if (action.id) {\n          actionLink.id = action.id.replace('{id}', item.id);\n        }\n\n        // Add onclick attribute for confirmation if specified\n        if (action.confirm) {\n          actionLink.setAttribute('onclick', \"return confirm('Are you sure?')\");\n        }\n\n        actionCell.appendChild(actionLink);\n        row.appendChild(actionCell);\n      });\n\n      this.tbody.appendChild(row);\n    });\n\n    this.updatePagination();\n  }\n\n  // Update the items per page and re-render data\n  updateItemsPerPage = (value) => {\n    this.itemsPerPage.value = value;\n    this.renderData();\n  }\n\n  // Update pagination buttons\n  updatePagination() {\n    const totalPages = Math.ceil(this.data.length / this.itemsPerPage.value); // Recalculate total pages\n    const startPage = Math.max(1, this.currentPage - 5);\n    const endPage = Math.min(startPage + 10, totalPages);\n\n    this.paginationContainer.innerHTML = '';\n\n    for (let i = startPage; i <= endPage; i++) {\n      const button = document.createElement('button');\n      button.textContent = i;\n      button.classList.add('pagination-button');\n      button.onclick = () => {\n        this.currentPage = i;\n        this.renderData(); // Render data for the new page\n        this.updatePagination(); // Update pagination buttons after rendering data\n      };\n      this.paginationContainer.appendChild(button);\n    }\n  }\n\n  // Filter the table based on search input\n  searchTable = (event) => {\n    const searchValue = this.searchInput.value.toLowerCase();\n\n    const filteredData = this.data.filter((item) => {\n      // Search through each column defined in the columns array\n      for (const column of this.columns) {\n        // If the column name maps to an actual data key and contains the search value, return true\n        if (item.hasOwnProperty(column.name) && item[column.name].toString().toLowerCase().includes(searchValue)) {\n          return true;\n        }\n        // If the column is a joined column, check if any of the joined columns contain the search value\n        if (column.joinedColumns) {\n          const joinedValue = column.joinedColumns.map(col => item[col]).join(' ').toLowerCase();\n          if (joinedValue.includes(searchValue)) {\n            return true;\n          }\n        }\n      }\n      // If no match found in any column, return false\n      return false;\n    });\n    this.filteredData = filteredData;\n\n    this.renderData();\n  }\n\n  // Sort the table based on the clicked column\n  sortTable(n) {\n    const columnHeader = this.columns[n].name; // Use the column name instead of the label or header\n\n    // Toggle sorting order\n    if (!this.sortingOrder[columnHeader] || this.sortingOrder[columnHeader] === 'desc') {\n      this.sortingOrder[columnHeader] = 'asc';\n    } else {\n      this.sortingOrder[columnHeader] = 'desc';\n    }\n\n    // Sort the data based on the current sorting order for this column\n    const sortedData = [...this.filteredData].sort((a, b) => {\n      const valueA = typeof a[columnHeader] === 'string' ? a[columnHeader].toLowerCase() : a[columnHeader];\n      const valueB = typeof b[columnHeader] === 'string' ? b[columnHeader].toLowerCase() : b[columnHeader];\n\n      if (this.sortingOrder[columnHeader] === 'asc') {\n        return valueA > valueB ? 1 : -1;\n      } else {\n        return valueA < valueB ? 1 : -1;\n      }\n    });\n    this.filteredData = sortedData;\n    this.renderData();\n    this.updatePagination();\n  }\n}\n\n//export { AnyGrid };\nexport default AnyGrid;\n"],"names":["constructor","data","columns","initialItemsPerPage","this","itemsPerPage","currentPage","tbody","searchInput","paginationContainer","filteredData","sortingOrder","initializeDataGrid","document","getElementById","addEventListener","searchTable","bind","dataGrid","querySelector","htmlContent","insertAdjacentHTML","event","updateItemsPerPage","target","value","renderData","updatePagination","innerHTML","headerRow","forEach","column","index","hidden","headerCell","createElement","textContent","label","header","joinedColumns","setAttribute","length","dataset","sortTable","appendChild","actionColumn","actions","action","startIndex","endIndex","Math","min","slice","item","row","cell","joinedValue","map","col","join","name","actionCell","actionLink","href","url","replace","id","class","classList","add","confirm","totalPages","ceil","startPage","max","endPage","i","button","onclick","searchValue","toLowerCase","filter","hasOwnProperty","toString","includes","n","columnHeader","sortedData","sort","a","b","valueA","valueB"],"mappings":"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"}